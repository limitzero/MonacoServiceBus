<!-- full example configuration for the message bus (for app.config) -->
<configuration>

	<configSections>
		<section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
	</configSections>

	<castle>

		<components>
			<!--
    <component id="my.ping.task"
               type="MyService.Tasks.PingTask, MyService" />
     -->
		</components>

		<facilities>

			<facility id="monaco.esb">

				<message-bus threads="1" retries="5" error="msmq://localhost/error.queue" endpoint="msmq://localhost/local.service.bus" logEndpoint="msmq://localhost/local.service.bus.log">

					<!-- endpoint for large-scale publish-subscribe across endpoints -->
					<distributor endpoint="msmq://localhost/distributor" />
					
					<!-- interval that the bus endpoint will send out a "heartbeat" to gauge queue performance (optional) -->
					<heartbeat interval="00:00:60" grace-period="00:00:05" />

					<!-- name of the control bus where the status messages will be sent (optional, must match protocol of transport of bus) 
				         if the broadcast interval is defined, then the pre-defined statistics about the endpoint are sent to the control endpoint, 
								 also if the recycle interval is defined, then the accumulated statistics will be cleared and the reporting interval starts 
								 again (by default this is set to 00:05:00 (five minutes) if the broadcast interval is defined and the recycle interval is 
								 not defined.
				-->
					<control endpoint="msmq://locahost/control.endpoint" broadcast-interval="00:01:00" recycle-interval="00:05:00" />

					<!-- can define custom transport here by fully qualified type (derivable from BaseTransport<>), uses MsmqTransport by default -->
					<transports>
						<transport type="" transactional="true" />
					</transports>

					<transport type="Monaco.Transports.Msmq.MsmqTransport, Monaco" transactional="true" />

					<!-- optional transports (see contrib project)
					
					 * in-memory transport used for testing only:
					<transport type="Monaco.Transports.Virtual.VirtualTransport, Monaco" transactional="false"/>
					
					-->
				</message-bus>


				<messages>
					<!-- to map a set of messages by namespace to an endpoint use the line below -->
					<add name="Monaco" endpoint="msmq://localhost/my.endpoint" />
					<!-- or to map all messages to the bus endpoint use the line below -->
					<add name="Monaco" />
				</messages>

				<!-- listing of the user-specified scheduled tasks that occur on the message bus (must implement Produces<T> interface)-->
				<tasks>
					<!-- (1) reference to task in components declaration (ref must be equal to id of the component)  -->
					<add ref="my.ping.task" name="Ping Task" method="Execute" interval="00:00:01" haltOnError="true" forceStart="true" />
					<!-- (2) or reference to task by loading type declaration -->
					<add type="MyService.Tasks.PingTask, MyService" name="Ping Task" method="Execute" interval="00:00:01" haltOnError="true" forceStart="true" />
				</tasks>

				<!-- the endpoint manager will broadcast information about the 
              service endpoints on a given interval and optionally recycle the 
              endpoint statistics calculation on a given interval -->
				<endpoint-service-manager broadcast-status-interval="00:01:00" recycle-statistics-interval="00:05:00" />

			</facility>
		</facilities>
	</castle>

</configuration>